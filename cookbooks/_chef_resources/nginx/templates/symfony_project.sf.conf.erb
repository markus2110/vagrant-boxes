server {
	listen 				80;
	server_name		~^(?<project>.+)\.<%= node['nginx']['default']['server_suffix'] %>\.sf$;
	root 					<%= node['nginx']['default']['project_root'] %>/projects/$project/web;

	client_max_body_size	150m;

    location / {
        # try to serve file directly, fallback to app.php
        try_files $uri /app.php$is_args$args;
    }


    # DEV
    # This rule should only be placed on your development environment
    # In production, don't include this and don't deploy app_dev.php or config.php
    location ~ ^/(app_dev|config)\.php(/|$) {
        fastcgi_pass unix:<%= node['php']['default']['fpm-socked'] %>;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
    }


    # PROD
    location ~ ^/app\.php(/|$) {
        fastcgi_pass unix:<%= node['php']['default']['fpm-socked'] %>;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/app.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
      return 404;
    }


	fastcgi_buffers 16 128k;
	fastcgi_buffer_size 512k;

	# error_log /var/log/nginx/project_error.log;
  # access_log /var/log/nginx/project_access.log;
	error_log 		/var/log/nginx/<%= node['nginx']['default']['server_suffix'] %>_error.log;
	access_log 		/var/log/nginx/<%= node['nginx']['default']['server_suffix'] %>_access.log;

}
